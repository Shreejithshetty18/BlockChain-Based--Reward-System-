{"ast":null,"code":"import { ethers } from \"ethers\";\nexport const contractAddress = \"0x5f0F43C43aD3fce0FA92bd54a06b04c1AE706d79\";\nexport const contractABI = [{\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"recipient\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"rewardUser\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"getTotalRewards\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nexport function getContractWithSigner(signer) {\n  return new ethers.Contract(contractAddress, contractABI, signer);\n}\nexport function getContractWithProvider() {\n  if (!window.ethereum) throw new Error(\"MetaMask not found\");\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  return new ethers.Contract(contractAddress, contractABI, provider);\n}","map":{"version":3,"names":["ethers","contractAddress","contractABI","getContractWithSigner","signer","Contract","getContractWithProvider","window","ethereum","Error","provider","providers","Web3Provider"],"sources":["C:/Users/SHREEJITH SHETTY/Downloads/blockchain-reward-system(main)/blockchain-reward-system(main)/frontend/src/contractUtils.js"],"sourcesContent":["import { ethers } from \"ethers\";\r\n\r\nexport const contractAddress = \"0x5f0F43C43aD3fce0FA92bd54a06b04c1AE706d79\";\r\n\r\nexport const contractABI = [\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"recipient\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"rewardUser\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"getTotalRewards\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  }\r\n];\r\n\r\nexport function getContractWithSigner(signer) {\r\n  return new ethers.Contract(contractAddress, contractABI, signer);\r\n}\r\n\r\nexport function getContractWithProvider() {\r\n  if (!window.ethereum) throw new Error(\"MetaMask not found\");\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  return new ethers.Contract(contractAddress, contractABI, provider);\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,OAAO,MAAMC,eAAe,GAAG,4CAA4C;AAE3E,OAAO,MAAMC,WAAW,GAAG,CACzB;EACE,QAAQ,EAAE,CACR;IACE,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,WAAW;IACnB,MAAM,EAAE;EACV,CAAC,EACD;IACE,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;EACV,CAAC,CACF;EACD,MAAM,EAAE,YAAY;EACpB,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE,YAAY;EAC/B,MAAM,EAAE;AACV,CAAC,EACD;EACE,QAAQ,EAAE,EAAE;EACZ,MAAM,EAAE,iBAAiB;EACzB,SAAS,EAAE,CACT;IACE,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,EAAE;IACV,MAAM,EAAE;EACV,CAAC,CACF;EACD,iBAAiB,EAAE,MAAM;EACzB,MAAM,EAAE;AACV,CAAC,CACF;AAED,OAAO,SAASC,qBAAqBA,CAACC,MAAM,EAAE;EAC5C,OAAO,IAAIJ,MAAM,CAACK,QAAQ,CAACJ,eAAe,EAAEC,WAAW,EAAEE,MAAM,CAAC;AAClE;AAEA,OAAO,SAASE,uBAAuBA,CAAA,EAAG;EACxC,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EAC3D,MAAMC,QAAQ,GAAG,IAAIV,MAAM,CAACW,SAAS,CAACC,YAAY,CAACL,MAAM,CAACC,QAAQ,CAAC;EACnE,OAAO,IAAIR,MAAM,CAACK,QAAQ,CAACJ,eAAe,EAAEC,WAAW,EAAEQ,QAAQ,CAAC;AACpE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}