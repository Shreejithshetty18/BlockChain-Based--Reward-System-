{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHREEJITH SHETTY\\\\Downloads\\\\blockchain-reward-system(main)\\\\blockchain-reward-system(main)\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { getReadOnlyContract, getSignerContract } from './contractUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState('');\n  const [rewardName, setRewardName] = useState('');\n  const [rewardPoints, setRewardPoints] = useState('');\n  const [rewards, setRewards] = useState([]);\n  const [contract, setContract] = useState(null);\n\n  // Load rewards from read-only contract on load\n  useEffect(() => {\n    const loadRewards = async () => {\n      const readOnlyContract = getReadOnlyContract();\n      setContract(readOnlyContract);\n      try {\n        const count = await readOnlyContract.getRewardCount();\n        const rewardsArray = [];\n        for (let i = 0; i < count; i++) {\n          const reward = await readOnlyContract.getReward(i);\n          rewardsArray.push({\n            name: reward[1],\n            points: reward[2].toString()\n          });\n        }\n        setRewards(rewardsArray);\n      } catch (error) {\n        console.error('Error loading rewards:', error);\n      }\n    };\n    loadRewards();\n  }, []);\n\n  // Connect wallet only when user wants to add reward\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert('MetaMask not detected');\n      return null;\n    }\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setWalletAddress(accounts[0]);\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const signerContract = getSignerContract(signer);\n      setContract(signerContract);\n      return signerContract;\n    } catch (err) {\n      console.error('Wallet connection failed:', err);\n      return null;\n    }\n  };\n  const handleAddReward = async () => {\n    if (!walletAddress) {\n      const signerContract = await connectWallet();\n      if (!signerContract) return; // stop if no wallet\n    }\n    try {\n      const tx = await contract.addReward(rewardName, parseInt(rewardPoints));\n      await tx.wait();\n\n      // After success, reload rewards with read-only contract (safer)\n      const readOnlyContract = getReadOnlyContract();\n      const count = await readOnlyContract.getRewardCount();\n      const rewardsArray = [];\n      for (let i = 0; i < count; i++) {\n        const reward = await readOnlyContract.getReward(i);\n        rewardsArray.push({\n          name: reward[1],\n          points: reward[2].toString()\n        });\n      }\n      setRewards(rewardsArray);\n      setRewardName('');\n      setRewardPoints('');\n    } catch (err) {\n      console.error('Error adding reward:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '30px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF81 Blockchain Reward System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), walletAddress ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u2705 Connected: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: walletAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u26A0\\uFE0F Wallet not connected. Connect only when adding rewards.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Reward Name\",\n        value: rewardName,\n        onChange: e => setRewardName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Points\",\n        value: rewardPoints,\n        onChange: e => setRewardPoints(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddReward,\n        children: \"Add Reward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCCB Rewards List:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rewards.length > 0 ? rewards.map((r, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [r.name, \" \\u2014 \", r.points, \" points\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No rewards found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4PfGd7UNc15xtb/praNxW3g0pNo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","getReadOnlyContract","getSignerContract","jsxDEV","_jsxDEV","App","_s","walletAddress","setWalletAddress","rewardName","setRewardName","rewardPoints","setRewardPoints","rewards","setRewards","contract","setContract","loadRewards","readOnlyContract","count","getRewardCount","rewardsArray","i","reward","getReward","push","name","points","toString","error","console","connectWallet","window","ethereum","alert","accounts","request","method","provider","providers","Web3Provider","signer","getSigner","signerContract","err","handleAddReward","tx","addReward","parseInt","wait","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","value","onChange","e","target","onClick","length","map","r","_c","$RefreshReg$"],"sources":["C:/Users/SHREEJITH SHETTY/Downloads/blockchain-reward-system(main)/blockchain-reward-system(main)/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { getReadOnlyContract, getSignerContract } from './contractUtils';\r\n\r\nfunction App() {\r\n  const [walletAddress, setWalletAddress] = useState('');\r\n  const [rewardName, setRewardName] = useState('');\r\n  const [rewardPoints, setRewardPoints] = useState('');\r\n  const [rewards, setRewards] = useState([]);\r\n  const [contract, setContract] = useState(null);\r\n\r\n  // Load rewards from read-only contract on load\r\n  useEffect(() => {\r\n    const loadRewards = async () => {\r\n      const readOnlyContract = getReadOnlyContract();\r\n      setContract(readOnlyContract);\r\n      try {\r\n        const count = await readOnlyContract.getRewardCount();\r\n        const rewardsArray = [];\r\n        for (let i = 0; i < count; i++) {\r\n          const reward = await readOnlyContract.getReward(i);\r\n          rewardsArray.push({ name: reward[1], points: reward[2].toString() });\r\n        }\r\n        setRewards(rewardsArray);\r\n      } catch (error) {\r\n        console.error('Error loading rewards:', error);\r\n      }\r\n    };\r\n    loadRewards();\r\n  }, []);\r\n\r\n  // Connect wallet only when user wants to add reward\r\n  const connectWallet = async () => {\r\n    if (!window.ethereum) {\r\n      alert('MetaMask not detected');\r\n      return null;\r\n    }\r\n    try {\r\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      setWalletAddress(accounts[0]);\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      const signerContract = getSignerContract(signer);\r\n      setContract(signerContract);\r\n      return signerContract;\r\n    } catch (err) {\r\n      console.error('Wallet connection failed:', err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleAddReward = async () => {\r\n    if (!walletAddress) {\r\n      const signerContract = await connectWallet();\r\n      if (!signerContract) return; // stop if no wallet\r\n    }\r\n\r\n    try {\r\n      const tx = await contract.addReward(rewardName, parseInt(rewardPoints));\r\n      await tx.wait();\r\n\r\n      // After success, reload rewards with read-only contract (safer)\r\n      const readOnlyContract = getReadOnlyContract();\r\n      const count = await readOnlyContract.getRewardCount();\r\n      const rewardsArray = [];\r\n      for (let i = 0; i < count; i++) {\r\n        const reward = await readOnlyContract.getReward(i);\r\n        rewardsArray.push({ name: reward[1], points: reward[2].toString() });\r\n      }\r\n      setRewards(rewardsArray);\r\n\r\n      setRewardName('');\r\n      setRewardPoints('');\r\n    } catch (err) {\r\n      console.error('Error adding reward:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '30px' }}>\r\n      <h1>🎁 Blockchain Reward System</h1>\r\n\r\n      {walletAddress ? (\r\n        <p>✅ Connected: <b>{walletAddress}</b></p>\r\n      ) : (\r\n        <p>⚠️ Wallet not connected. Connect only when adding rewards.</p>\r\n      )}\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Reward Name\"\r\n          value={rewardName}\r\n          onChange={(e) => setRewardName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Points\"\r\n          value={rewardPoints}\r\n          onChange={(e) => setRewardPoints(e.target.value)}\r\n        />\r\n        <button onClick={handleAddReward}>Add Reward</button>\r\n      </div>\r\n\r\n      <h3>📋 Rewards List:</h3>\r\n      <ul>\r\n        {rewards.length > 0 ? (\r\n          rewards.map((r, i) => <li key={i}>{r.name} — {r.points} points</li>)\r\n        ) : (\r\n          <li>No rewards found</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}