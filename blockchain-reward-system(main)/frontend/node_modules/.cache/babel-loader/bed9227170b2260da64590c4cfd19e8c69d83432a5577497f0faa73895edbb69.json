{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHREEJITH SHETTY\\\\Downloads\\\\blockchain-reward-system(main)\\\\blockchain-reward-system(main)\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { contractAddress, contractABI } from \"./contractUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [points, setPoints] = useState(\"\");\n  const [rewards, setRewards] = useState([]);\n\n  // Connect to MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      setAccount(accounts[0]);\n    } else {\n      alert(\"Please install MetaMask\");\n    }\n  };\n\n  // Add Reward\n  const addReward = async () => {\n    if (!name || !points) {\n      alert(\"Enter reward name and points\");\n      return;\n    }\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n    try {\n      const tx = await contract.addReward(name, parseInt(points));\n      await tx.wait();\n      setName(\"\");\n      setPoints(\"\");\n      fetchRewards(); // Refresh after add\n    } catch (err) {\n      console.error(\"Add reward failed:\", err);\n    }\n  };\n\n  // Fetch Rewards\n  const fetchRewards = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const contract = new ethers.Contract(contractAddress, contractABI, provider);\n    try {\n      const count = await contract.getRewardCount();\n      const rewardsArray = [];\n      for (let i = 0; i < count; i++) {\n        const reward = await contract.getReward(i);\n        rewardsArray.push({\n          name: reward[0],\n          points: reward[1].toNumber()\n        });\n      }\n      setRewards(rewardsArray);\n    } catch (err) {\n      console.error(\"Fetch rewards failed:\", err);\n    }\n  };\n  useEffect(() => {\n    connectWallet();\n    fetchRewards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF81 Blockchain Reward System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Connected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 10\n      }, this), \" \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Reward Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Points\",\n      value: points,\n      onChange: e => setPoints(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addReward,\n      children: \"Add Reward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCCB Rewards List:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rewards.map((reward, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [reward.name, \" \\u2014 \", reward.points, \" points\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OOqtHo44xu+uUloJeVognycELxQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","contractAddress","contractABI","jsxDEV","_jsxDEV","App","_s","account","setAccount","name","setName","points","setPoints","rewards","setRewards","connectWallet","window","ethereum","accounts","request","method","alert","addReward","provider","providers","Web3Provider","signer","getSigner","contract","Contract","tx","parseInt","wait","fetchRewards","err","console","error","count","getRewardCount","rewardsArray","i","reward","getReward","push","toNumber","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","type","onClick","map","index","_c","$RefreshReg$"],"sources":["C:/Users/SHREEJITH SHETTY/Downloads/blockchain-reward-system(main)/blockchain-reward-system(main)/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { contractAddress, contractABI } from \"./contractUtils\";\r\n\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [points, setPoints] = useState(\"\");\r\n  const [rewards, setRewards] = useState([]);\r\n\r\n  // Connect to MetaMask\r\n  const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      setAccount(accounts[0]);\r\n    } else {\r\n      alert(\"Please install MetaMask\");\r\n    }\r\n  };\r\n\r\n  // Add Reward\r\n  const addReward = async () => {\r\n    if (!name || !points) {\r\n      alert(\"Enter reward name and points\");\r\n      return;\r\n    }\r\n\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\r\n\r\n    try {\r\n      const tx = await contract.addReward(name, parseInt(points));\r\n      await tx.wait();\r\n      setName(\"\");\r\n      setPoints(\"\");\r\n      fetchRewards(); // Refresh after add\r\n    } catch (err) {\r\n      console.error(\"Add reward failed:\", err);\r\n    }\r\n  };\r\n\r\n  // Fetch Rewards\r\n  const fetchRewards = async () => {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const contract = new ethers.Contract(contractAddress, contractABI, provider);\r\n\r\n    try {\r\n      const count = await contract.getRewardCount();\r\n      const rewardsArray = [];\r\n      for (let i = 0; i < count; i++) {\r\n        const reward = await contract.getReward(i);\r\n        rewardsArray.push({ name: reward[0], points: reward[1].toNumber() });\r\n      }\r\n      setRewards(rewardsArray);\r\n    } catch (err) {\r\n      console.error(\"Fetch rewards failed:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectWallet();\r\n    fetchRewards();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\" }}>\r\n      <h1>üéÅ Blockchain Reward System</h1>\r\n      <p><strong>Connected:</strong> {account}</p>\r\n\r\n      <input\r\n        placeholder=\"Reward Name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Points\"\r\n        value={points}\r\n        onChange={(e) => setPoints(e.target.value)}\r\n      />\r\n      <button onClick={addReward}>Add Reward</button>\r\n\r\n      <h2>üìã Rewards List:</h2>\r\n      <ul>\r\n        {rewards.map((reward, index) => (\r\n          <li key={index}>\r\n            {reward.name} ‚Äî {reward.points} points\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,eAAe,EAAEC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MACjFZ,UAAU,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,MAAM;MACLG,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACb,IAAI,IAAI,CAACE,MAAM,EAAE;MACpBU,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACF;IAEA,MAAME,QAAQ,GAAG,IAAIvB,MAAM,CAACwB,SAAS,CAACC,YAAY,CAACT,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMS,MAAM,GAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC;IACnC,MAAMC,QAAQ,GAAG,IAAI5B,MAAM,CAAC6B,QAAQ,CAAC5B,eAAe,EAAEC,WAAW,EAAEwB,MAAM,CAAC;IAE1E,IAAI;MACF,MAAMI,EAAE,GAAG,MAAMF,QAAQ,CAACN,SAAS,CAACb,IAAI,EAAEsB,QAAQ,CAACpB,MAAM,CAAC,CAAC;MAC3D,MAAMmB,EAAE,CAACE,IAAI,CAAC,CAAC;MACftB,OAAO,CAAC,EAAE,CAAC;MACXE,SAAS,CAAC,EAAE,CAAC;MACbqB,YAAY,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC;IAC1C;EACF,CAAC;;EAED;EACA,MAAMD,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMV,QAAQ,GAAG,IAAIvB,MAAM,CAACwB,SAAS,CAACC,YAAY,CAACT,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMW,QAAQ,GAAG,IAAI5B,MAAM,CAAC6B,QAAQ,CAAC5B,eAAe,EAAEC,WAAW,EAAEqB,QAAQ,CAAC;IAE5E,IAAI;MACF,MAAMc,KAAK,GAAG,MAAMT,QAAQ,CAACU,cAAc,CAAC,CAAC;MAC7C,MAAMC,YAAY,GAAG,EAAE;MACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,EAAEG,CAAC,EAAE,EAAE;QAC9B,MAAMC,MAAM,GAAG,MAAMb,QAAQ,CAACc,SAAS,CAACF,CAAC,CAAC;QAC1CD,YAAY,CAACI,IAAI,CAAC;UAAElC,IAAI,EAAEgC,MAAM,CAAC,CAAC,CAAC;UAAE9B,MAAM,EAAE8B,MAAM,CAAC,CAAC,CAAC,CAACG,QAAQ,CAAC;QAAE,CAAC,CAAC;MACtE;MACA9B,UAAU,CAACyB,YAAY,CAAC;IAC1B,CAAC,CAAC,OAAOL,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC7C;EACF,CAAC;EAEDnC,SAAS,CAAC,MAAM;IACdgB,aAAa,CAAC,CAAC;IACfkB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7B,OAAA;IAAKyC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B3C,OAAA;MAAA2C,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC/C,OAAA;MAAA2C,QAAA,gBAAG3C,OAAA;QAAA2C,QAAA,EAAQ;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAC5C,OAAO;IAAA;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5C/C,OAAA;MACEgD,WAAW,EAAC,aAAa;MACzBC,KAAK,EAAE5C,IAAK;MACZ6C,QAAQ,EAAGC,CAAC,IAAK7C,OAAO,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACF/C,OAAA;MACEqD,IAAI,EAAC,QAAQ;MACbL,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAE1C,MAAO;MACd2C,QAAQ,EAAGC,CAAC,IAAK3C,SAAS,CAAC2C,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF/C,OAAA;MAAQsD,OAAO,EAAEpC,SAAU;MAAAyB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/C/C,OAAA;MAAA2C,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB/C,OAAA;MAAA2C,QAAA,EACGlC,OAAO,CAAC8C,GAAG,CAAC,CAAClB,MAAM,EAAEmB,KAAK,kBACzBxD,OAAA;QAAA2C,QAAA,GACGN,MAAM,CAAChC,IAAI,EAAC,UAAG,EAACgC,MAAM,CAAC9B,MAAM,EAAC,SACjC;MAAA,GAFSiD,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAC7C,EAAA,CAzFQD,GAAG;AAAAwD,EAAA,GAAHxD,GAAG;AA2FZ,eAAeA,GAAG;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}