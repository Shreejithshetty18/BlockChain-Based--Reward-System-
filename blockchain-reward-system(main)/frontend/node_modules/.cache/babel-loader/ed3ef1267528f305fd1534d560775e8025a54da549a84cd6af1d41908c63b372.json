{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHREEJITH SHETTY\\\\Downloads\\\\blockchain-reward-system(main)\\\\blockchain-reward-system(main)\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { getContractWithSigner, getContractWithProvider } from \"./contractUtils\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [recipientAddress, setRecipientAddress] = useState(\"\");\n  const [rewardAmount, setRewardAmount] = useState(\"\");\n  const [totalRewards, setTotalRewards] = useState(null);\n  const [contractWithSigner, setContractWithSigner] = useState(null);\n\n  // Connect Wallet Function\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setWalletAddress(accounts[0]);\n        await loadContractWithSigner();\n        await fetchTotalRewards();\n      } catch (error) {\n        console.error(\"Wallet connection failed:\", error);\n      }\n    } else {\n      alert(\"MetaMask not detected\");\n    }\n  };\n\n  // Auto wallet refresh listener\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        setWalletAddress(accounts[0]);\n        loadContractWithSigner();\n        fetchTotalRewards();\n      });\n    }\n  }, []);\n\n  // Load contract instance with signer (for sending tx)\n  const loadContractWithSigner = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = getContractWithSigner(signer);\n    setContractWithSigner(contract);\n  };\n\n  // Fetch total rewards from contract (read-only)\n  const fetchTotalRewards = async () => {\n    try {\n      const contract = getContractWithProvider();\n      const total = await contract.getTotalRewards();\n      setTotalRewards(total.toString());\n    } catch (err) {\n      console.error(\"Error fetching total rewards:\", err);\n    }\n  };\n\n  // Reward user function (write)\n  const handleRewardUser = async () => {\n    if (!contractWithSigner) return;\n    if (!ethers.utils.isAddress(recipientAddress)) {\n      alert(\"Invalid recipient address\");\n      return;\n    }\n    if (!rewardAmount || isNaN(rewardAmount) || Number(rewardAmount) <= 0) {\n      alert(\"Invalid reward amount\");\n      return;\n    }\n    try {\n      const tx = await contractWithSigner.rewardUser(recipientAddress, ethers.BigNumber.from(rewardAmount));\n      await tx.wait();\n      alert(\"Reward transaction confirmed!\");\n      fetchTotalRewards();\n      setRecipientAddress(\"\");\n      setRewardAmount(\"\");\n    } catch (err) {\n      console.error(\"Error rewarding user:\", err);\n      alert(\"Transaction failed. See console.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"30px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF81 Blockchain Reward System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), !walletAddress && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"\\uD83D\\uDD0C Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 26\n    }, this), walletAddress && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u2705 Connected: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: walletAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Recipient Address\",\n          value: recipientAddress,\n          onChange: e => setRecipientAddress(e.target.value),\n          style: {\n            width: \"300px\",\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Reward Amount\",\n          value: rewardAmount,\n          onChange: e => setRewardAmount(e.target.value),\n          style: {\n            width: \"120px\",\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRewardUser,\n          children: \"Reward User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Rewards: \", totalRewards !== null ? totalRewards : \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9UvP27i9I0N06komTBSVfpikwng=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","getContractWithSigner","getContractWithProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","walletAddress","setWalletAddress","recipientAddress","setRecipientAddress","rewardAmount","setRewardAmount","totalRewards","setTotalRewards","contractWithSigner","setContractWithSigner","connectWallet","window","ethereum","accounts","request","method","loadContractWithSigner","fetchTotalRewards","error","console","alert","on","provider","providers","Web3Provider","signer","getSigner","contract","total","getTotalRewards","toString","err","handleRewardUser","utils","isAddress","isNaN","Number","tx","rewardUser","BigNumber","from","wait","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","width","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/SHREEJITH SHETTY/Downloads/blockchain-reward-system(main)/blockchain-reward-system(main)/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { getContractWithSigner, getContractWithProvider } from \"./contractUtils\";\r\n\r\nfunction App() {\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [recipientAddress, setRecipientAddress] = useState(\"\");\r\n  const [rewardAmount, setRewardAmount] = useState(\"\");\r\n  const [totalRewards, setTotalRewards] = useState(null);\r\n  const [contractWithSigner, setContractWithSigner] = useState(null);\r\n\r\n  // Connect Wallet Function\r\n  const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        setWalletAddress(accounts[0]);\r\n        await loadContractWithSigner();\r\n        await fetchTotalRewards();\r\n      } catch (error) {\r\n        console.error(\"Wallet connection failed:\", error);\r\n      }\r\n    } else {\r\n      alert(\"MetaMask not detected\");\r\n    }\r\n  };\r\n\r\n  // Auto wallet refresh listener\r\n  useEffect(() => {\r\n    if (window.ethereum) {\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        setWalletAddress(accounts[0]);\r\n        loadContractWithSigner();\r\n        fetchTotalRewards();\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // Load contract instance with signer (for sending tx)\r\n  const loadContractWithSigner = async () => {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    const contract = getContractWithSigner(signer);\r\n    setContractWithSigner(contract);\r\n  };\r\n\r\n  // Fetch total rewards from contract (read-only)\r\n  const fetchTotalRewards = async () => {\r\n    try {\r\n      const contract = getContractWithProvider();\r\n      const total = await contract.getTotalRewards();\r\n      setTotalRewards(total.toString());\r\n    } catch (err) {\r\n      console.error(\"Error fetching total rewards:\", err);\r\n    }\r\n  };\r\n\r\n  // Reward user function (write)\r\n  const handleRewardUser = async () => {\r\n    if (!contractWithSigner) return;\r\n    if (!ethers.utils.isAddress(recipientAddress)) {\r\n      alert(\"Invalid recipient address\");\r\n      return;\r\n    }\r\n    if (!rewardAmount || isNaN(rewardAmount) || Number(rewardAmount) <= 0) {\r\n      alert(\"Invalid reward amount\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const tx = await contractWithSigner.rewardUser(recipientAddress, ethers.BigNumber.from(rewardAmount));\r\n      await tx.wait();\r\n      alert(\"Reward transaction confirmed!\");\r\n      fetchTotalRewards();\r\n      setRecipientAddress(\"\");\r\n      setRewardAmount(\"\");\r\n    } catch (err) {\r\n      console.error(\"Error rewarding user:\", err);\r\n      alert(\"Transaction failed. See console.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"30px\" }}>\r\n      <h1>🎁 Blockchain Reward System</h1>\r\n\r\n      {!walletAddress && <button onClick={connectWallet}>🔌 Connect Wallet</button>}\r\n\r\n      {walletAddress && (\r\n        <>\r\n          <p>\r\n            ✅ Connected: <b>{walletAddress}</b>\r\n          </p>\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Recipient Address\"\r\n              value={recipientAddress}\r\n              onChange={(e) => setRecipientAddress(e.target.value)}\r\n              style={{ width: \"300px\", marginRight: \"10px\" }}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Reward Amount\"\r\n              value={rewardAmount}\r\n              onChange={(e) => setRewardAmount(e.target.value)}\r\n              style={{ width: \"120px\", marginRight: \"10px\" }}\r\n            />\r\n            <button onClick={handleRewardUser}>Reward User</button>\r\n          </div>\r\n\r\n          <h3>Total Rewards: {totalRewards !== null ? totalRewards : \"Loading...\"}</h3>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}