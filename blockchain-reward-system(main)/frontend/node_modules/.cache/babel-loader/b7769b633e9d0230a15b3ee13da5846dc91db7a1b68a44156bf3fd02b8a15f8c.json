{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHREEJITH SHETTY\\\\Downloads\\\\blockchain-reward-system(main)\\\\blockchain-reward-system(main)\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { getContractWithProvider, getContractWithSigner } from \"./contractUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [rewards, setRewards] = useState([]);\n  const [contract, setContract] = useState(null);\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [rewardName, setRewardName] = useState(\"\");\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [signer, setSigner] = useState(null);\n\n  // Load rewards using read-only contract on component mount\n  useEffect(() => {\n    const loadRewards = async () => {\n      const readOnlyContract = getContractWithProvider();\n      setContract(readOnlyContract);\n      try {\n        const rewardsList = await readOnlyContract.getAllRewards();\n        setRewards(rewardsList);\n      } catch (err) {\n        console.error(\"Failed to fetch rewards:\", err);\n      }\n    };\n    loadRewards();\n  }, []);\n\n  // Connect wallet and create contract with signer\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"Please install MetaMask!\");\n      return;\n    }\n    try {\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      setSigner(signer);\n      const signerContract = getContractWithSigner(signer);\n      setContract(signerContract);\n      setWalletConnected(true);\n      const address = await signer.getAddress();\n      setWalletAddress(address);\n    } catch (err) {\n      console.error(\"Wallet connection failed:\", err);\n    }\n  };\n\n  // Add new reward using signer contract\n  const handleAddReward = async () => {\n    if (!walletConnected || !contract) {\n      alert(\"Please connect your wallet first!\");\n      return;\n    }\n    if (!rewardName) {\n      alert(\"Please enter a reward name.\");\n      return;\n    }\n    try {\n      const tx = await contract.addReward(rewardName, walletAddress);\n      await tx.wait();\n\n      // Refresh the rewards list after adding\n      const updatedRewards = await contract.getAllRewards();\n      setRewards(updatedRewards);\n      setRewardName(\"\"); // clear input\n    } catch (err) {\n      console.error(\"Error adding reward:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reward List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), !walletConnected ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wallet connected: \", walletAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rewards.map((reward, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), \" \", reward.name, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Wallet:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 52\n        }, this), \" \", reward.wallet]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Reward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Reward Name\",\n      value: rewardName,\n      onChange: e => setRewardName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddReward,\n      disabled: !walletConnected,\n      children: \"Add Reward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s8XPIGlO8oYMbd1N4tIvl09XGs0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ethers","getContractWithProvider","getContractWithSigner","jsxDEV","_jsxDEV","App","_s","rewards","setRewards","contract","setContract","walletConnected","setWalletConnected","rewardName","setRewardName","walletAddress","setWalletAddress","signer","setSigner","loadRewards","readOnlyContract","rewardsList","getAllRewards","err","console","error","connectWallet","window","ethereum","alert","request","method","provider","providers","Web3Provider","getSigner","signerContract","address","getAddress","handleAddReward","tx","addReward","wait","updatedRewards","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","reward","index","name","wallet","type","placeholder","value","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/SHREEJITH SHETTY/Downloads/blockchain-reward-system(main)/blockchain-reward-system(main)/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { getContractWithProvider, getContractWithSigner } from \"./contractUtils\";\r\n\r\nfunction App() {\r\n  const [rewards, setRewards] = useState([]);\r\n  const [contract, setContract] = useState(null);\r\n  const [walletConnected, setWalletConnected] = useState(false);\r\n  const [rewardName, setRewardName] = useState(\"\");\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [signer, setSigner] = useState(null);\r\n\r\n  // Load rewards using read-only contract on component mount\r\n  useEffect(() => {\r\n    const loadRewards = async () => {\r\n      const readOnlyContract = getContractWithProvider();\r\n      setContract(readOnlyContract);\r\n\r\n      try {\r\n        const rewardsList = await readOnlyContract.getAllRewards();\r\n        setRewards(rewardsList);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch rewards:\", err);\r\n      }\r\n    };\r\n    loadRewards();\r\n  }, []);\r\n\r\n  // Connect wallet and create contract with signer\r\n  const connectWallet = async () => {\r\n    if (!window.ethereum) {\r\n      alert(\"Please install MetaMask!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      setSigner(signer);\r\n\r\n      const signerContract = getContractWithSigner(signer);\r\n      setContract(signerContract);\r\n      setWalletConnected(true);\r\n\r\n      const address = await signer.getAddress();\r\n      setWalletAddress(address);\r\n    } catch (err) {\r\n      console.error(\"Wallet connection failed:\", err);\r\n    }\r\n  };\r\n\r\n  // Add new reward using signer contract\r\n  const handleAddReward = async () => {\r\n    if (!walletConnected || !contract) {\r\n      alert(\"Please connect your wallet first!\");\r\n      return;\r\n    }\r\n    if (!rewardName) {\r\n      alert(\"Please enter a reward name.\");\r\n      return;\r\n    }\r\n    try {\r\n      const tx = await contract.addReward(rewardName, walletAddress);\r\n      await tx.wait();\r\n\r\n      // Refresh the rewards list after adding\r\n      const updatedRewards = await contract.getAllRewards();\r\n      setRewards(updatedRewards);\r\n\r\n      setRewardName(\"\"); // clear input\r\n    } catch (err) {\r\n      console.error(\"Error adding reward:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Reward List</h1>\r\n      {!walletConnected ? (\r\n        <button onClick={connectWallet}>Connect Wallet</button>\r\n      ) : (\r\n        <p>Wallet connected: {walletAddress}</p>\r\n      )}\r\n\r\n      <ul>\r\n        {rewards.map((reward, index) => (\r\n          <li key={index}>\r\n            <strong>Name:</strong> {reward.name} | <strong>Wallet:</strong> {reward.wallet}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2>Add Reward</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Reward Name\"\r\n        value={rewardName}\r\n        onChange={(e) => setRewardName(e.target.value)}\r\n      />\r\n      <button onClick={handleAddReward} disabled={!walletConnected}>\r\n        Add Reward\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}