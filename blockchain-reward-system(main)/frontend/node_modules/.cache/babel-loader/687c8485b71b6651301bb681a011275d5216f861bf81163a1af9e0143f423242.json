{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHREEJITH SHETTY\\\\Downloads\\\\blockchain-reward-system(main)\\\\blockchain-reward-system(main)\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { getContract } from './contractUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState('');\n  const [rewardName, setRewardName] = useState('');\n  const [rewardPoints, setRewardPoints] = useState('');\n  const [rewards, setRewards] = useState([]);\n  const [contract, setContract] = useState(null);\n\n  // Manual Wallet Connection\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setWalletAddress(accounts[0]);\n        await loadContract(); // Load only after user clicks connect\n      } catch (error) {\n        console.error('Wallet connection failed:', error);\n      }\n    } else {\n      alert('MetaMask not detected');\n    }\n  };\n\n  // Account Change Listener - just update address\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', accounts => {\n        setWalletAddress(accounts[0]);\n        setContract(null); // Clear contract until user reconnects manually\n      });\n    }\n  }, []);\n\n  // Load contract\n  const loadContract = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contractInstance = getContract(signer);\n    setContract(contractInstance);\n    fetchRewards(contractInstance);\n  };\n\n  // Add reward\n  const handleAddReward = async () => {\n    if (!contract) return;\n    try {\n      const tx = await contract.addReward(rewardName, parseInt(rewardPoints));\n      await tx.wait();\n      fetchRewards(contract);\n      setRewardName('');\n      setRewardPoints('');\n    } catch (err) {\n      console.error('Error adding reward:', err);\n    }\n  };\n\n  // Fetch rewards\n  const fetchRewards = async contractInstance => {\n    try {\n      const count = await contractInstance.getRewardCount();\n      const rewardsArray = [];\n      for (let i = 0; i < count; i++) {\n        const reward = await contractInstance.getReward(i);\n        rewardsArray.push({\n          name: reward[0],\n          points: reward[1].toString()\n        });\n      }\n      setRewards(rewardsArray);\n    } catch (err) {\n      console.error('Error fetching rewards:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '30px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF81 Blockchain Reward System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), !walletAddress && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"\\uD83D\\uDD0C Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), walletAddress && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u2705 Connected: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: walletAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Reward Name\",\n          value: rewardName,\n          onChange: e => setRewardName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Points\",\n          value: rewardPoints,\n          onChange: e => setRewardPoints(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddReward,\n          children: \"Add Reward\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCCB Rewards List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: rewards.map((r, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [r.name, \" \\u2014 \", r.points, \" points\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4PfGd7UNc15xtb/praNxW3g0pNo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","getContract","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","walletAddress","setWalletAddress","rewardName","setRewardName","rewardPoints","setRewardPoints","rewards","setRewards","contract","setContract","connectWallet","window","ethereum","accounts","request","method","loadContract","error","console","alert","on","provider","providers","Web3Provider","signer","getSigner","contractInstance","fetchRewards","handleAddReward","tx","addReward","parseInt","wait","err","count","getRewardCount","rewardsArray","i","reward","getReward","push","name","points","toString","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","map","r","_c","$RefreshReg$"],"sources":["C:/Users/SHREEJITH SHETTY/Downloads/blockchain-reward-system(main)/blockchain-reward-system(main)/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { getContract } from './contractUtils';\r\n\r\nfunction App() {\r\n  const [walletAddress, setWalletAddress] = useState('');\r\n  const [rewardName, setRewardName] = useState('');\r\n  const [rewardPoints, setRewardPoints] = useState('');\r\n  const [rewards, setRewards] = useState([]);\r\n  const [contract, setContract] = useState(null);\r\n\r\n  // Manual Wallet Connection\r\n  const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        setWalletAddress(accounts[0]);\r\n        await loadContract(); // Load only after user clicks connect\r\n      } catch (error) {\r\n        console.error('Wallet connection failed:', error);\r\n      }\r\n    } else {\r\n      alert('MetaMask not detected');\r\n    }\r\n  };\r\n\r\n  // Account Change Listener - just update address\r\n  useEffect(() => {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        setWalletAddress(accounts[0]);\r\n        setContract(null); // Clear contract until user reconnects manually\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // Load contract\r\n  const loadContract = async () => {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    const contractInstance = getContract(signer);\r\n    setContract(contractInstance);\r\n    fetchRewards(contractInstance);\r\n  };\r\n\r\n  // Add reward\r\n  const handleAddReward = async () => {\r\n    if (!contract) return;\r\n    try {\r\n      const tx = await contract.addReward(rewardName, parseInt(rewardPoints));\r\n      await tx.wait();\r\n      fetchRewards(contract);\r\n      setRewardName('');\r\n      setRewardPoints('');\r\n    } catch (err) {\r\n      console.error('Error adding reward:', err);\r\n    }\r\n  };\r\n\r\n  // Fetch rewards\r\n  const fetchRewards = async (contractInstance) => {\r\n    try {\r\n      const count = await contractInstance.getRewardCount();\r\n      const rewardsArray = [];\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        const reward = await contractInstance.getReward(i);\r\n        rewardsArray.push({ name: reward[0], points: reward[1].toString() });\r\n      }\r\n\r\n      setRewards(rewardsArray);\r\n    } catch (err) {\r\n      console.error('Error fetching rewards:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '30px' }}>\r\n      <h1>🎁 Blockchain Reward System</h1>\r\n\r\n      {!walletAddress && (\r\n        <button onClick={connectWallet}>🔌 Connect Wallet</button>\r\n      )}\r\n\r\n      {walletAddress && (\r\n        <>\r\n          <p>✅ Connected: <b>{walletAddress}</b></p>\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Reward Name\"\r\n              value={rewardName}\r\n              onChange={(e) => setRewardName(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Points\"\r\n              value={rewardPoints}\r\n              onChange={(e) => setRewardPoints(e.target.value)}\r\n            />\r\n            <button onClick={handleAddReward}>Add Reward</button>\r\n          </div>\r\n\r\n          <h3>📋 Rewards List:</h3>\r\n          <ul>\r\n            {rewards.map((r, i) => (\r\n              <li key={i}>{r.name} — {r.points} points</li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}