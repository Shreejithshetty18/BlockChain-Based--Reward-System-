{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anantha Naik\\\\Downloads\\\\blockchain-reward-system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getContract } from \"./contractUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [points, setPoints] = useState(\"\");\n  const [rewards, setRewards] = useState([]);\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      setAccount(accounts[0]);\n      fetchRewards(); // fetch rewards once wallet is connected\n    } else {\n      alert(\"Please install MetaMask\");\n    }\n  };\n  const handleAddReward = async () => {\n    try {\n      const contract = getContract();\n      const tx = await contract.addReward(name, parseInt(points));\n      await tx.wait();\n      alert(\"Reward added successfully to blockchain!\");\n      fetchRewards(); // refresh the rewards list\n    } catch (err) {\n      console.error(\"Error adding reward:\", err);\n    }\n  };\n  const fetchRewards = async () => {\n    try {\n      const contract = getContract();\n      const count = await contract.getRewardCount();\n      const fetched = [];\n      for (let i = 0; i < count; i++) {\n        const reward = await contract.getReward(i);\n        fetched.push({\n          name: reward[0],\n          points: reward[1].toString()\n        });\n      }\n      setRewards(fetched);\n    } catch (err) {\n      console.error(\"Error fetching rewards:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Reward Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Points\",\n        value: points,\n        onChange: e => setPoints(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddReward,\n        children: \"Add Reward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Rewards:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rewards.map((r, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [r.name, \" - \", r.points, \" points\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yDyN0BK7PT2o6bm9RWGRXED8JP8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","getContract","jsxDEV","_jsxDEV","App","_s","account","setAccount","name","setName","points","setPoints","rewards","setRewards","connectWallet","window","ethereum","accounts","request","method","fetchRewards","alert","handleAddReward","contract","tx","addReward","parseInt","wait","err","console","error","count","getRewardCount","fetched","i","reward","getReward","push","toString","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","map","r","index","_c","$RefreshReg$"],"sources":["C:/Users/Anantha Naik/Downloads/blockchain-reward-system/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { getContract } from \"./contractUtils\";\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [points, setPoints] = useState(\"\");\r\n  const [rewards, setRewards] = useState([]);\r\n\r\n  const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      setAccount(accounts[0]);\r\n      fetchRewards(); // fetch rewards once wallet is connected\r\n    } else {\r\n      alert(\"Please install MetaMask\");\r\n    }\r\n  };\r\n\r\n  const handleAddReward = async () => {\r\n    try {\r\n      const contract = getContract();\r\n      const tx = await contract.addReward(name, parseInt(points));\r\n      await tx.wait();\r\n      alert(\"Reward added successfully to blockchain!\");\r\n      fetchRewards(); // refresh the rewards list\r\n    } catch (err) {\r\n      console.error(\"Error adding reward:\", err);\r\n    }\r\n  };\r\n\r\n  const fetchRewards = async () => {\r\n    try {\r\n      const contract = getContract();\r\n      const count = await contract.getRewardCount();\r\n      const fetched = [];\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        const reward = await contract.getReward(i);\r\n        fetched.push({ name: reward[0], points: reward[1].toString() });\r\n      }\r\n\r\n      setRewards(fetched);\r\n    } catch (err) {\r\n      console.error(\"Error fetching rewards:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={connectWallet}>Connect Wallet</button>\r\n      {account && <p>Connected: {account}</p>}\r\n\r\n      <div>\r\n        <input placeholder=\"Reward Name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        <input placeholder=\"Points\" value={points} onChange={(e) => setPoints(e.target.value)} />\r\n        <button onClick={handleAddReward}>Add Reward</button>\r\n      </div>\r\n\r\n      <h2>All Rewards:</h2>\r\n      <ul>\r\n        {rewards.map((r, index) => (\r\n          <li key={index}>\r\n            {r.name} - {r.points} points\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}