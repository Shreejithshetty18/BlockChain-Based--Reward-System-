{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anantha Naik\\\\Downloads\\\\blockchain-reward-system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// In App.js or WalletConnect.js\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setAccount(accounts[0]);\n        console.log(\"Connected:\", accounts[0]);\n      } catch (err) {\n        console.error(\"User denied wallet connection\");\n      }\n    } else {\n      alert(\"Please install MetaMask\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"v+GsaBOyRPoPwJh7mxQ3zpEGSB8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","account","setAccount","connectWallet","window","ethereum","accounts","request","method","console","log","err","error","alert","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Anantha Naik/Downloads/blockchain-reward-system/frontend/src/App.js"],"sourcesContent":["// In App.js or WalletConnect.js\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState(null);\r\n\r\n  const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        setAccount(accounts[0]);\r\n        console.log(\"Connected:\", accounts[0]);\r\n      } catch (err) {\r\n        console.error(\"User denied wallet connection\");\r\n      }\r\n    } else {\r\n      alert(\"Please install MetaMask\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={connectWallet}>Connect Wallet</button>\r\n      {account && <p>Connected account: {account}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QACjFN,UAAU,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;QACvBG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEJ,QAAQ,CAAC,CAAC,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZF,OAAO,CAACG,KAAK,CAAC,+BAA+B,CAAC;MAChD;IACF,CAAC,MAAM;MACLC,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAQiB,OAAO,EAAEZ,aAAc;MAAAW,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtDlB,OAAO,iBAAIH,OAAA;MAAAgB,QAAA,GAAG,qBAAmB,EAACb,OAAO;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACnB,EAAA,CAvBQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}